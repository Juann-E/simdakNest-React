import { DataSource } from 'typeorm';
import * as bcrypt from 'bcrypt';
import { User, UserRole } from '../modules/user/user.entity';
import * as dotenv from 'dotenv';

dotenv.config();

const AppDataSource = new DataSource({
  type: 'mysql',
  host: process.env.DB_HOST,
  port: Number(process.env.DB_PORT),
  username: process.env.DB_USER,
  password: process.env.DB_PASS,
  database: process.env.DB_NAME,
  entities: [User],
  synchronize: false,
});

async function createAdmin() {
  await AppDataSource.initialize();

  const hashedPassword = await bcrypt.hash('123', 10);

  const admin = new User();
  admin.username = 'admin';
  admin.password = hashedPassword;
  admin.role = UserRole.ADMIN; //  Enum, bukan string
  admin.email = '123@gmail.com';

  await AppDataSource.manager.save(admin);
  console.log(' Admin user created');

  await AppDataSource.destroy();
}

createAdmin().catch((err) => {
  console.error('Error creating admin:', err);
  process.exit(1);
});
